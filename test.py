elf = bytes([
    # ELF Header
    0x7f,0x45,0x4c,0x46,  # Magic: ELF
    0x02, 0x01, 0x01, 0x00,  # 64-bit, little endian, version
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  # Padding
    0x02,0x00,             # Type: Executable
    0x3e,0x00,             # Machine: x86_64
    0x01,0x00,0x00,0x00,   # Version
    0x78,0x00,0x40,0x00,0x00,0x00,0x00,0x00,  # Entry point = 0x400078
    0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  # Program header offset = 0x40
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  # Section header offset = 0
    0x00,0x00,0x00,0x00,   # Flags
    0x40,0x00,             # ELF header size = 64
    0x38,0x00,             # Program header size = 56
    0x01,0x00,             # Number of program headers
    0x00,0x00,             # Section header entry size
    0x00,0x00,             # Number of section headers
    0x00,0x00,             # Section header string table index

    # Program Header
    0x01,0x00,0x00,0x00,   # Type: PT_LOAD
    0x05,0x00,0x00,0x00,   # Flags: Read + Execute
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  # Offset = 0
    0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,  # Vaddr = 0x400000
    0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,  # Paddr = 0x400000
    0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  # File size = 0x88
    0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  # Mem size = 0x88
    0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,  # Align = 0x1000

    # Code at offset 0x78 (which is vaddr 0x400078)
    0xb8, 0x3c, 0x00, 0x00, 0x00,  # mov eax, 60 (exit syscall)
    0x48, 0x31, 0xff,              # xor rdi, rdi (status = 0)
    0x0f, 0x05                    # syscall
])

with open("minimal_elf64", "wb") as f:
    f.write(elf)
